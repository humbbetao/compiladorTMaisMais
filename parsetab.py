
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2D7BB6118BAFBBEE789B3F5B2CD7EBC4'
    
_lr_action_items = {'ABREPAR':([4,12,26,37,40,42,46,68,],[14,19,19,62,63,67,72,63,]),'DIVISAO':([28,30,31,32,68,76,77,],[-50,-49,58,-46,-50,58,-45,]),'MAIOR':([28,30,31,32,68,71,76,77,],[-50,-49,-42,-46,-50,89,-41,-45,]),'ENTAO':([28,30,31,32,68,69,70,71,76,77,96,100,],[-50,-49,-42,-46,-50,84,-35,-34,-41,-45,-8,-33,]),'IDENTIFICADOR':([1,2,3,5,6,13,15,20,22,24,28,29,30,31,32,33,34,35,36,38,39,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,64,65,67,68,70,71,72,73,74,75,76,77,81,84,85,86,87,88,89,90,92,95,96,97,98,99,100,101,102,103,104,105,106,],[-51,-52,12,-53,-54,22,26,28,-24,40,-50,-23,-49,-42,-46,-22,60,61,-15,-17,-18,40,-14,68,-13,-21,-19,-16,40,-20,40,40,28,-44,-43,-47,-48,28,68,68,68,-12,82,-50,-35,-34,91,40,40,40,-41,-45,-30,40,-39,28,-40,-37,-36,-38,68,-32,-8,-25,-26,40,-33,-31,-29,40,-28,40,-27,]),'$end':([7,10,17,18,66,93,],[-1,0,-2,-3,-5,-4,]),'INTEIRO':([0,8,11,14,19,21,22,24,28,29,30,31,32,33,36,38,39,41,43,45,47,48,49,50,51,52,53,61,65,68,70,71,73,74,75,76,77,81,84,94,95,96,97,98,99,100,101,102,103,104,105,106,],[5,5,5,5,5,5,-24,5,-50,-23,-49,-42,-46,-22,-15,-17,-18,5,-14,-13,-21,-19,-16,5,-20,5,5,5,-12,-50,-35,-34,5,5,5,-41,-45,-30,5,-9,-32,-8,-25,-26,5,-33,-31,-29,5,-28,5,-27,]),'RETORNA':([22,24,28,29,30,31,32,33,36,38,39,41,43,45,47,48,49,50,51,52,53,65,68,70,71,73,74,75,76,77,81,84,95,96,97,98,99,100,101,102,103,104,105,106,],[-24,42,-50,-23,-49,-42,-46,-22,-15,-17,-18,42,-14,-13,-21,-19,-16,42,-20,42,42,-12,-50,-35,-34,42,42,42,-41,-45,-30,42,-32,-8,-25,-26,42,-33,-31,-29,42,-28,42,-27,]),'ATRIBUICAO':([12,40,60,],[20,64,20,]),'VIRGULA':([12,60,],[21,21,]),'MENOR':([28,30,31,32,68,71,76,77,],[-50,-49,-42,-46,-50,90,-41,-45,]),'MAIORIGUAL':([28,30,31,32,68,71,76,77,],[-50,-49,-42,-46,-50,88,-41,-45,]),'SUBTRACAO':([28,29,30,31,32,68,71,76,77,100,],[-50,55,-49,-42,-46,-50,55,-41,-45,55,]),'SE':([22,24,28,29,30,31,32,33,36,38,39,41,43,45,47,48,49,50,51,52,53,65,68,70,71,73,74,75,76,77,81,84,95,96,97,98,99,100,101,102,103,104,105,106,],[-24,44,-50,-23,-49,-42,-46,-22,-15,-17,-18,44,-14,-13,-21,-19,-16,44,-20,44,44,-12,-50,-35,-34,44,44,44,-41,-45,-30,44,-32,-8,-25,-26,44,-33,-31,-29,44,-28,44,-27,]),'NUMERO':([0,8,11,14,19,20,21,22,24,28,29,30,31,32,33,36,38,39,41,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,67,68,70,71,73,74,75,76,77,81,84,85,86,87,88,89,90,92,94,95,96,97,98,99,100,101,102,103,104,105,106,],[2,2,2,2,2,30,2,-24,2,-50,-23,-49,-42,-46,-22,-15,-17,-18,2,-14,30,-13,-21,-19,-16,2,-20,2,2,30,-44,-43,-47,-48,30,2,30,30,30,-12,83,-50,-35,-34,2,2,2,-41,-45,-30,2,-39,30,-40,-37,-36,-38,30,-9,-32,-8,-25,-26,2,-33,-31,-29,2,-28,2,-27,]),'IGUALDADE':([28,30,31,32,68,71,76,77,],[-50,-49,-42,-46,-50,87,-41,-45,]),'FECHAPAR':([14,25,27,28,30,31,32,61,68,70,71,76,77,78,79,80,82,83,91,96,100,],[24,52,53,-50,-49,-42,-46,-11,-50,-35,-34,-41,-45,-10,95,96,97,98,101,-8,-33,]),'LEIA':([22,24,28,29,30,31,32,33,36,38,39,41,43,45,47,48,49,50,51,52,53,65,68,70,71,73,74,75,76,77,81,84,95,96,97,98,99,100,101,102,103,104,105,106,],[-24,46,-50,-23,-49,-42,-46,-22,-15,-17,-18,46,-14,-13,-21,-19,-16,46,-20,46,46,-12,-50,-35,-34,46,46,46,-41,-45,-30,46,-32,-8,-25,-26,46,-33,-31,-29,46,-28,46,-27,]),'FLUTUANTE':([0,8,11,14,19,21,22,24,28,29,30,31,32,33,36,38,39,41,43,45,47,48,49,50,51,52,53,61,65,68,70,71,73,74,75,76,77,81,84,94,95,96,97,98,99,100,101,102,103,104,105,106,],[6,6,6,6,6,6,-24,6,-50,-23,-49,-42,-46,-22,-15,-17,-18,6,-14,-13,-21,-19,-16,6,-20,6,6,6,-12,-50,-35,-34,6,6,6,-41,-45,-30,6,-9,-32,-8,-25,-26,6,-33,-31,-29,6,-28,6,-27,]),'ADICAO':([28,29,30,31,32,68,71,76,77,100,],[-50,56,-49,-42,-46,-50,56,-41,-45,56,]),'ATE':([22,28,29,30,31,32,33,36,38,39,43,45,47,48,49,51,65,68,70,71,73,76,77,81,95,96,97,98,100,101,102,104,106,],[-24,-50,-23,-49,-42,-46,-22,-15,-17,-18,-14,-13,-21,-19,-16,-20,-12,-50,-35,-34,92,-41,-45,-30,-32,-8,-25,-26,-33,-31,-29,-28,-27,]),'MENORIGUAL':([28,30,31,32,68,71,76,77,],[-50,-49,-42,-46,-50,85,-41,-45,]),'MULTIPLICACAO':([28,30,31,32,68,76,77,],[-50,-49,57,-46,-50,57,-45,]),'SENAO':([22,28,29,30,31,32,33,36,38,39,43,45,47,48,49,51,65,68,70,71,76,77,81,95,96,97,98,99,100,101,102,104,106,],[-24,-50,-23,-49,-42,-46,-22,-15,-17,-18,-14,-13,-21,-19,-16,-20,-12,-50,-35,-34,-41,-45,-30,-32,-8,-25,-26,103,-33,-31,-29,-28,-27,]),'DOISPONTOS':([1,2,3,5,6,23,34,],[-51,-52,13,-53,-54,35,13,]),'PRINCIPAL':([0,8,9,11,16,22,28,29,30,31,32,33,76,77,94,],[4,-7,4,4,-6,-24,-50,-23,-49,-42,-46,-22,-41,-45,-9,]),'ESCREVE':([22,24,28,29,30,31,32,33,36,38,39,41,43,45,47,48,49,50,51,52,53,65,68,70,71,73,74,75,76,77,81,84,95,96,97,98,99,100,101,102,103,104,105,106,],[-24,37,-50,-23,-49,-42,-46,-22,-15,-17,-18,37,-14,-13,-21,-19,-16,37,-20,37,37,-12,-50,-35,-34,37,37,37,-41,-45,-30,37,-32,-8,-25,-26,37,-33,-31,-29,37,-28,37,-27,]),'FIM':([22,28,29,30,31,32,33,36,38,39,41,43,45,47,48,49,51,65,68,70,71,74,75,76,77,81,95,96,97,98,99,100,101,102,104,105,106,],[-24,-50,-23,-49,-42,-46,-22,-15,-17,-18,66,-14,-13,-21,-19,-16,-20,-12,-50,-35,-34,93,94,-41,-45,-30,-32,-8,-25,-26,104,-33,-31,-29,-28,106,-27,]),'REPITA':([22,24,28,29,30,31,32,33,36,38,39,41,43,45,47,48,49,50,51,52,53,65,68,70,71,73,74,75,76,77,81,84,95,96,97,98,99,100,101,102,103,104,105,106,],[-24,50,-50,-23,-49,-42,-46,-22,-15,-17,-18,50,-14,-13,-21,-19,-16,50,-20,50,50,-12,-50,-35,-34,50,50,50,-41,-45,-30,50,-32,-8,-25,-26,50,-33,-31,-29,50,-28,50,-27,]),'VAZIO':([0,8,11,14,19,21,22,24,28,29,30,31,32,33,36,38,39,41,43,45,47,48,49,50,51,52,53,61,65,68,70,71,73,74,75,76,77,81,84,94,95,96,97,98,99,100,101,102,103,104,105,106,],[1,1,1,1,1,1,-24,1,-50,-23,-49,-42,-46,-22,-15,-17,-18,1,-14,-13,-21,-19,-16,1,-20,1,1,1,-12,-50,-35,-34,1,1,1,-41,-45,-30,1,-9,-32,-8,-25,-26,1,-33,-31,-29,1,-28,1,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressao':([44,62,63,64,92,],[69,79,80,81,102,]),'fator':([20,44,54,59,62,63,64,86,92,],[32,32,32,77,32,32,32,32,32,]),'operador_add':([29,71,100,],[54,54,54,]),'operador_logico':([71,],[86,]),'expressao_leitura':([24,41,50,52,53,73,74,75,84,99,103,105,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'expressao_escreva':([24,41,50,52,53,73,74,75,84,99,103,105,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'principal':([0,9,11,],[7,17,7,]),'declaracao_de_funcao':([0,8,11,],[8,8,8,]),'expressao_iteracao':([24,41,50,52,53,73,74,75,84,99,103,105,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'operador_mult':([31,76,],[59,59,]),'sequencia_de_declaracao':([24,50,52,53,84,103,],[41,73,74,75,99,105,]),'programa':([0,11,],[10,18,]),'termo':([20,44,54,62,63,64,86,92,],[31,31,76,31,31,31,31,31,]),'declaracao':([24,41,50,52,53,73,74,75,84,99,103,105,],[45,65,45,45,45,65,65,65,45,65,45,65,]),'retorna':([24,41,50,52,53,73,74,75,84,99,103,105,],[51,51,51,51,51,51,51,51,51,51,51,51,]),'tipo':([0,8,11,14,19,21,24,41,50,52,53,61,73,74,75,84,99,103,105,],[3,15,3,23,23,34,34,34,34,34,34,23,34,34,34,34,34,34,34,]),'declaracao_param':([14,19,61,],[25,27,78,]),'chamada_de_funcao':([24,41,44,50,52,53,62,63,64,73,74,75,84,92,99,103,105,],[47,47,70,47,47,47,70,70,70,47,47,47,47,70,47,47,47,]),'expressao_simples':([20,44,62,63,64,86,92,],[29,71,71,71,71,100,71,]),'declara_var':([0,11,21,24,41,50,52,53,73,74,75,84,99,103,105,],[11,11,33,48,48,48,48,48,48,48,48,48,48,48,48,]),'expressao_condicional':([24,41,50,52,53,73,74,75,84,99,103,105,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'expressao_atribuicao':([24,41,50,52,53,73,74,75,84,99,103,105,],[49,49,49,49,49,49,49,49,49,49,49,49,]),'func_loop':([0,8,11,],[9,16,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> principal','programa',1,'p_programa_1','parser.py',51),
  ('programa -> func_loop principal','programa',2,'p_programa_2','parser.py',56),
  ('programa -> declara_var programa','programa',2,'p_programa_3','parser.py',61),
  ('principal -> PRINCIPAL ABREPAR declaracao_param FECHAPAR sequencia_de_declaracao FIM','principal',6,'p_principal_1','parser.py',65),
  ('principal -> PRINCIPAL ABREPAR FECHAPAR sequencia_de_declaracao FIM','principal',5,'p_principal_2','parser.py',69),
  ('func_loop -> declaracao_de_funcao func_loop','func_loop',2,'p_func_loop_1','parser.py',73),
  ('func_loop -> declaracao_de_funcao','func_loop',1,'p_func_loop_2','parser.py',77),
  ('chamada_de_funcao -> IDENTIFICADOR ABREPAR expressao FECHAPAR','chamada_de_funcao',4,'p_chamada_de_funcao','parser.py',82),
  ('declaracao_de_funcao -> tipo IDENTIFICADOR ABREPAR declaracao_param FECHAPAR sequencia_de_declaracao FIM','declaracao_de_funcao',7,'p_declaracao_de_funcao','parser.py',87),
  ('declaracao_param -> tipo DOISPONTOS IDENTIFICADOR declaracao_param','declaracao_param',4,'p_declaracao_param_1','parser.py',91),
  ('declaracao_param -> tipo DOISPONTOS IDENTIFICADOR','declaracao_param',3,'p_declaracao_param_2','parser.py',96),
  ('sequencia_de_declaracao -> sequencia_de_declaracao declaracao','sequencia_de_declaracao',2,'p_sequencia_de_declaracao_1','parser.py',101),
  ('sequencia_de_declaracao -> declaracao','sequencia_de_declaracao',1,'p_sequencia_de_declaracao_2','parser.py',105),
  ('declaracao -> expressao_condicional','declaracao',1,'p_declaracao_1','parser.py',109),
  ('declaracao -> expressao_iteracao','declaracao',1,'p_declaracao_2','parser.py',113),
  ('declaracao -> expressao_atribuicao','declaracao',1,'p_declaracao_3','parser.py',117),
  ('declaracao -> expressao_leitura','declaracao',1,'p_declaracao_4','parser.py',121),
  ('declaracao -> expressao_escreva','declaracao',1,'p_declaracao_5','parser.py',125),
  ('declaracao -> declara_var','declaracao',1,'p_declaracao_6','parser.py',129),
  ('declaracao -> retorna','declaracao',1,'p_declaracao_7','parser.py',133),
  ('declaracao -> chamada_de_funcao','declaracao',1,'p_declaracao_8','parser.py',137),
  ('declara_var -> tipo IDENTIFICADOR VIRGULA declara_var','declara_var',4,'p_declara_var1','parser.py',142),
  ('declara_var -> tipo IDENTIFICADOR ATRIBUICAO expressao_simples','declara_var',4,'p_declara_var2','parser.py',146),
  ('declara_var -> tipo DOISPONTOS IDENTIFICADOR','declara_var',3,'p_declara_var3','parser.py',154),
  ('retorna -> RETORNA ABREPAR IDENTIFICADOR FECHAPAR','retorna',4,'p_retorna','parser.py',159),
  ('retorna -> RETORNA ABREPAR NUMERO FECHAPAR','retorna',4,'p_retorna','parser.py',160),
  ('expressao_condicional -> SE expressao ENTAO sequencia_de_declaracao SENAO sequencia_de_declaracao FIM','expressao_condicional',7,'p_expressao_condicional_1','parser.py',165),
  ('expressao_condicional -> SE expressao ENTAO sequencia_de_declaracao FIM','expressao_condicional',5,'p_expressao_condicional_2','parser.py',169),
  ('expressao_iteracao -> REPITA sequencia_de_declaracao ATE expressao','expressao_iteracao',4,'p_expressao_iteracao','parser.py',173),
  ('expressao_atribuicao -> IDENTIFICADOR ATRIBUICAO expressao','expressao_atribuicao',3,'p_expressao_atribuicao','parser.py',177),
  ('expressao_leitura -> LEIA ABREPAR IDENTIFICADOR FECHAPAR','expressao_leitura',4,'p_expressao_leitura','parser.py',182),
  ('expressao_escreva -> ESCREVE ABREPAR expressao FECHAPAR','expressao_escreva',4,'p_expressao_escreva_1','parser.py',192),
  ('expressao -> expressao_simples operador_logico expressao_simples','expressao',3,'p_expressao_1','parser.py',196),
  ('expressao -> expressao_simples','expressao',1,'p_expressao_2','parser.py',200),
  ('expressao -> chamada_de_funcao','expressao',1,'p_expressao_3','parser.py',204),
  ('operador_logico -> MAIOR','operador_logico',1,'p_operador_logico_1','parser.py',208),
  ('operador_logico -> MAIORIGUAL','operador_logico',1,'p_operador_logico_2','parser.py',212),
  ('operador_logico -> MENOR','operador_logico',1,'p_operador_logico_3','parser.py',216),
  ('operador_logico -> MENORIGUAL','operador_logico',1,'p_operador_logico_4','parser.py',220),
  ('operador_logico -> IGUALDADE','operador_logico',1,'p_operador_logico_5','parser.py',224),
  ('expressao_simples -> expressao_simples operador_add termo','expressao_simples',3,'p_expressao_simples_1','parser.py',229),
  ('expressao_simples -> termo','expressao_simples',1,'p_expressao_simples_2','parser.py',233),
  ('operador_add -> ADICAO','operador_add',1,'p_operador_add_1','parser.py',237),
  ('operador_add -> SUBTRACAO','operador_add',1,'p_operador_add_2','parser.py',241),
  ('termo -> termo operador_mult fator','termo',3,'p_termo_1','parser.py',245),
  ('termo -> fator','termo',1,'p_termo_2','parser.py',249),
  ('operador_mult -> MULTIPLICACAO','operador_mult',1,'p_operador_mult_1','parser.py',253),
  ('operador_mult -> DIVISAO','operador_mult',1,'p_operador_mult_2','parser.py',257),
  ('fator -> NUMERO','fator',1,'p_fator_1','parser.py',261),
  ('fator -> IDENTIFICADOR','fator',1,'p_fator_2','parser.py',265),
  ('tipo -> VAZIO','tipo',1,'p_tipo_1','parser.py',271),
  ('tipo -> NUMERO','tipo',1,'p_tipo_1','parser.py',272),
  ('tipo -> INTEIRO','tipo',1,'p_tipo_2','parser.py',279),
  ('tipo -> FLUTUANTE','tipo',1,'p_tipo_2','parser.py',280),
]
